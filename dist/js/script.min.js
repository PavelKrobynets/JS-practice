/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\"Use strict\";\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  // Tabs\n\n  const tabs = document.querySelectorAll(\".tabheader__item\"),\n    tabsContent = document.querySelectorAll(\".tabcontent\"),\n    tabsParrent = document.querySelector(\".tabheader__items\");\n\n  function hidetabContent() {\n    tabsContent.forEach((item) => {\n      item.classList.remove(\"show\", \"fade\");\n      item.classList.add(\"hide\");\n    });\n\n    tabs.forEach((tab) => {\n      tab.classList.remove(\"tabheader__item_active\");\n    });\n  }\n\n  function showTabContent(i = 0) {\n    tabsContent[i].classList.remove(\"hide\");\n    tabsContent[i].classList.add(\"show\", \"fade\");\n    tabs[i].classList.add(\"tabheader__item_active\");\n  }\n\n  hidetabContent();\n  showTabContent();\n\n  tabsParrent.addEventListener(\"click\", (event) => {\n    const target = event.target;\n\n    if (target && target.classList.contains(\"tabheader__item\")) {\n      tabs.forEach((item, i) => {\n        if (target == item) {\n          hidetabContent();\n          showTabContent(i);\n        }\n      });\n    }\n  });\n\n  //Timer\n\n  const deadline = \"2024-05-20\";\n\n  function getTimeRemaining(endTime) {\n    let days, hours, minutes, seconds;\n    const t = Date.parse(endTime) - Date.parse(new Date());\n\n    if (t <= 0) {\n      days = 0;\n      hours = 0;\n      minutes = 0;\n      seconds = 0;\n    } else {\n      days = Math.floor(t / (1000 * 60 * 60 * 24));\n      hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n      minutes = Math.floor((t / (1000 * 60)) % 60);\n      seconds = Math.floor((t / 1000) % 60);\n    }\n    return {\n      total: t,\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds,\n    };\n  }\n\n  function getZero(num) {\n    if (num >= 0 && num < 10) {\n      return `0${num}`;\n    } else {\n      return num;\n    }\n  }\n\n  function setClock(selector, endTime) {\n    const timer = document.querySelector(selector),\n      days = timer.querySelector(\"#days\"),\n      hours = timer.querySelector(\"#hours\"),\n      minutes = timer.querySelector(\"#minutes\"),\n      seconds = timer.querySelector(\"#seconds\"),\n      timeInterval = setInterval(updateClock, 1000);\n\n    updateClock();\n\n    function updateClock() {\n      const t = getTimeRemaining(endTime);\n\n      days.innerHTML = getZero(t.days);\n      hours.innerHTML = getZero(t.hours);\n      minutes.innerHTML = getZero(t.minutes);\n      seconds.innerHTML = getZero(t.seconds);\n\n      if (t.total <= 0) {\n        clearInterval(timeInterval);\n      }\n    }\n  }\n  setClock(\".timer\", deadline);\n\n  // Modal\n\n  const modalTrigger = document.querySelectorAll(\"[data-modal]\"),\n    modal = document.querySelector(\".modal\"),\n    modalCloseBtn = document.querySelector(\"[data-close]\");\n\n  function openModal() {\n    // modal.classList.add(\"visible\");\n    // modal.classList.remove(\"hidden\");\n    modal.classList.toggle(\"visible\");\n    document.body.style.overflow = \"hidden\";\n    // clearInterval(modalTimerId);\n  }\n\n  modalTrigger.forEach((btn) => {\n    btn.addEventListener(\"click\", openModal);\n  });\n\n  function closeModal() {\n    // modal.classList.add(\"hidden\");\n    // modal.classList.remove(\"visible\");\n    modal.classList.toggle(\"visible\");\n    document.body.style.overflow = \"visible\";\n  }\n\n  modalCloseBtn.addEventListener(\"click\", closeModal);\n\n  modal.addEventListener(\"click\", (e) => {\n    if (e.target === modal) {\n      closeModal();\n    }\n  });\n\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.code == \"Escape\" && modal.classList.contains(\"visible\")) {\n      closeModal();\n    }\n  });\n\n  // const modalTimerId = setTimeout(openModal, 15000);\n\n  function showModalByScroll() {\n    if (\n      window.scrollY + document.documentElement.clientHeight >=\n      document.documentElement.scrollHeight - 1\n    ) {\n      openModal();\n      window.removeEventListener(\"scroll\", showModalByScroll);\n    }\n  }\n\n  window.addEventListener(\"scroll\", showModalByScroll);\n\n  // Using classes for cards\n\n  class MenuCard {\n    constructor(src, alt, title, descr, price, parentSelector, ...classes) {\n      this.src = src;\n      this.alt = alt;\n      this.title = title;\n      this.descr = descr;\n      this.price = price;\n      this.classes = classes;\n      this.parent = document.querySelector(parentSelector);\n      this.transfer = 38;\n    }\n    changeToUAH() {\n      this.price = +this.price * this.transfer;\n    }\n    showOnPage() {\n      this.changeToUAH();\n      const element = document.createElement(\"div\");\n      if (this.classes[0]) {\n        this.classes.forEach((className) => element.classList.add(className));\n      } else {\n        element.classList.add(\"menu__item\");\n      }\n      element.innerHTML = `\n\t\t\t\t\t<img src=${this.src} alt=${this.alt}>\n\t\t\t\t\t<h3 class=\"menu__item-subtitle\">${this.title}</h3>\n\t\t\t\t\t<div class=\"menu__item-descr\">${this.descr}</div>\n\t\t\t\t\t<div class=\"menu__item-divider\"></div>\n\t\t\t\t\t<div class=\"menu__item-price\">\n\t\t\t\t\t\t<div class=\"menu__item-cost\">Цена:</div>\n\t\t\t\t\t\t<div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t`;\n      this.parent.append(element);\n    }\n  }\n\n  new MenuCard(\n    \"img/tabs/vegy.jpg\",\n    \"Fitness\",\n    `Меню \"Фитнес\"`,\n    `Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!`,\n    9,\n    `.menu .container`\n  ).showOnPage();\n\n  new MenuCard(\n    \"img/tabs/elite.jpg\",\n    \"Premium\",\n    `Меню “Премиум”`,\n    `В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!`,\n    15,\n    `.menu .container`,\n    `menu__item`\n  ).showOnPage();\n\n  new MenuCard(\n    \"img/tabs/post.jpg\",\n    \"Vegan\",\n    `Меню \"Постное\"`,\n    `Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.`,\n    7,\n    `.menu .container`,\n    `menu__item`\n  ).showOnPage();\n\n  // Forms\n\n  const forms = document.querySelectorAll(\"form\"),\n    mesasge = {\n      loading: \"Loading\",\n      succes: \"Thank you! We'll conect you soon\",\n      error: \"Oops... Something went wrong\",\n    };\n\n  forms.forEach((item) => {\n    postData(item);\n  });\n\n  // Form Data\n  // function postData(form) {\n  //   form.addEventListener(\"submit\", (event) => {\n  //     event.preventDefault();\n\n  //     const statusMessage = document.createElement(\"div\");\n  //     statusMessage.classList.add(\"status\");\n  //     statusMessage.textContent = mesasge.loading;\n  //     form.append(statusMessage);\n\n  //     const reqest = new XMLHttpRequest();\n  //     reqest.open(\"POST\", \"server.php\");\n\n  //     // reqest.setRequestHeader(\"Content-type\", \"multipart/form-data\");\n  //     let formData = new FormData(form);\n\n  //     reqest.send(formData);\n\n  //     reqest.addEventListener(\"load\", () => {\n  //       if (reqest.status === 200) {\n  //         console.log(reqest.responseText);\n  //         statusMessage.textContent = mesasge.succes;\n  //         form.reset();\n  //         setTimeout(() => {statusMessage.remove();}, 2000);\n  //       } else {\n  //         statusMessage.textContent = mesasge.error;\n  //       }\n  //     });\n  //   });\n  // }\n\n  function postData(form) {\n    form.addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n\n      const statusMessage = document.createElement(\"div\");\n      statusMessage.classList.add(\"status\");\n      statusMessage.textContent = mesasge.loading;\n      form.append(statusMessage);\n\n      const reqest = new XMLHttpRequest();\n      reqest.open(\"POST\", \"server.php\");\n\n      reqest.setRequestHeader(\"Content-type\", \"aplication/json\");\n      let formData = new FormData(form);\n      const object = {};\n      formData.forEach((value, key) => {\n        object[key] = value;\n      });\n\n      const json = JSON.stringify(object);\n\n      reqest.send(json);\n\n      reqest.addEventListener(\"load\", () => {\n        if (reqest.status === 200) {\n          console.log(reqest.responseText);\n          statusMessage.textContent = mesasge.succes;\n          form.reset();\n          setTimeout(() => {\n            statusMessage.remove();\n          }, 2000);\n        } else {\n          statusMessage.textContent = mesasge.error;\n        }\n      });\n    });\n  }\n});\n\n\n//# sourceURL=webpack://gulp_struct/./src/js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/script.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;